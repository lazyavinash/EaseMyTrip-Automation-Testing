<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="25" hostname="DESKTOP-DT1HFES" name="com.easemytrip.runner.roundtripRunner" tests="26" failures="0" timestamp="12 Aug 2020 05:10:45 GMT" time="15.898" errors="1">
  <testcase name="flightDetailsOneWay" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- flightDetailsOneWay -->
  <testcase name="Test" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- Test -->
  <testcase name="travellerEMICheckCLearButton" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- travellerEMICheckCLearButton -->
  <testcase name="AvailabilityTest" time="15.898" classname="com.easemytrip.runner.roundtripRunner">
    <error type="java.lang.IllegalArgumentException" message="bound must be positive">
      <![CDATA[java.lang.IllegalArgumentException: bound must be positive
at java.util.Random.nextInt(Random.java:388)
at com.easemytrip.pom.RoundTrip.findRoundTrip(RoundTrip.java:41)
at com.easemytrip.runner.roundtripRunner.AvailabilityTest(roundtripRunner.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- AvailabilityTest -->
  <testcase name="uinsuranceRadioCheck" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- uinsuranceRadioCheck -->
  <testcase name="freeCancellationRadio" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- freeCancellationRadio -->
  <testcase name="verifyEmail" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyEmail -->
  <testcase name="verifyAdultTravellerTitleDropDown" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyAdultTravellerTitleDropDown -->
  <testcase name="verifyAdultTravellerFirstName" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyAdultTravellerFirstName -->
  <testcase name="verifyAdultTravellerLastName" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyAdultTravellerLastName -->
  <testcase name="verifyAddBaggageButton" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyAddBaggageButton -->
  <testcase name="removeAdult" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- removeAdult -->
  <testcase name="verifyAddAdultButton" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyAddAdultButton -->
  <testcase name="verifyChildTravellerTitle" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyChildTravellerTitle -->
  <testcase name="verifyChildTravellerFirstName" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyChildTravellerFirstName -->
  <testcase name="verifyChildTravellerLastName" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyChildTravellerLastName -->
  <testcase name="removeChild" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- removeChild -->
  <testcase name="verifyAddChildButton" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyAddChildButton -->
  <testcase name="verifyInfantTravellerTitle" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyInfantTravellerTitle -->
  <testcase name="verifyInfantTravellerFirstName" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyInfantTravellerFirstName -->
  <testcase name="verifyInfantTravellerLastName" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyInfantTravellerLastName -->
  <testcase name="verifyInfantTravellerDOB" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyInfantTravellerDOB -->
  <testcase name="removeInfant" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- removeInfant -->
  <testcase name="verifyAddInfantButton" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyAddInfantButton -->
  <testcase name="addSeatVerify" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- addSeatVerify -->
  <testcase name="verifyContactNo" time="0.000" classname="com.easemytrip.runner.roundtripRunner">
    <skipped/>
  </testcase> <!-- verifyContactNo -->
</testsuite> <!-- com.easemytrip.runner.roundtripRunner -->
